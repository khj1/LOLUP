plugins {
	id 'org.springframework.boot' version '2.5.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.lolup'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:2.5.4'

	implementation 'org.springframework.boot:spring-boot-devtools:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-security:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-webflux:2.5.4'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
	implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.3'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE'
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3'
	implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
	implementation group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.64'

	// JSON String-> Java Object
	implementation 'com.google.code.gson:gson:2.8.8'

	implementation group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.1.1.RELEASE'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'

	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.4'
	testImplementation 'io.projectreactor:reactor-test:3.4.9'
	testImplementation "org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.2.0"
	testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient:2.0.5.RELEASE'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.5.RELEASE'
	testImplementation 'org.springframework.security:spring-security-test:5.5.1'

	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation group: 'com.google.guava', name: 'guava', version: '29.0-jre'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
	systemProperty "jasypt.encryptor.password", project.getProperties().get("jasypt.encryptor.password")
}

asciidoctor {
	dependsOn test
	inputs.dir snippetsDir
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor
	// 소스 코드에 html파일을 복사
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

jar	{
	enabled = false
}

bootJar {
	dependsOn asciidoctor
	copy {
		from "${asciidoctor.outputDir}"
		into 'BOOT-INF/classes/static/docs'
	}
}

build {
	dependsOn copyDocument
}
